definitions:
  errorhandling.ErrorMessage:
    properties:
      error:
        type: string
    type: object
  models.Event:
    properties:
      ID:
        type: integer
      category:
        type: string
      date:
        type: string
      description:
        type: string
      location:
        type: string
      organizer:
        type: string
      time:
        type: string
      title:
        type: string
    required:
    - category
    - title
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /events:
    get:
      consumes:
      - application/json
      description: List all the events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
      summary: List Events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new Event
      parameters:
      - description: The new Event Values in JSON
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
      summary: Create Event
      tags:
      - events
  /events/{event_id}:
    delete:
      consumes:
      - application/json
      description: Delete event by id
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorhandling.ErrorMessage'
      summary: Delete Event
      tags:
      - events
    get:
      consumes:
      - application/json
      description: Get event by id
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorhandling.ErrorMessage'
      summary: Get Event
      tags:
      - events
    put:
      consumes:
      - application/json
      description: Substitute the Event completely with the new JSON body
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: The new Event Values in JSON
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorhandling.ErrorMessage'
      summary: SubstituteEvent
      tags:
      - events
  /health:
    get:
      consumes:
      - application/json
      description: Check the status of the REST API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check Status
      tags:
      - health
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
